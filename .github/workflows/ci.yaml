name: CI

on:
  pull_request:
    branches: [master, develop]
  push:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black isort

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Check code formatting with black
        run: |
          black --check --diff .

      - name: Check import sorting with isort
        continue-on-error: true
        run: |
          isort --check-only --diff .

      - name: Run tests with pytest
        run: |
          pytest --cov=backup_orchestrator --cov=backup_cli --cov-report=xml --cov-report=html --cov-report=term-missing --cov-fail-under=40

      - name: Upload coverage to Codecov
        continue-on-error: true
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

      - name: Upload coverage reports as artifacts
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

  emoji-check:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Detectar emojis en el repositorio
        run: |
          python3 - << 'EOF'
          import sys, os, re
          emoji_re = re.compile(
              r'[\U0001F000-\U0001F02F'
              r'\U0001F0A0-\U0001F0FF'
              r'\U0001F100-\U0001F64F'
              r'\U0001F680-\U0001F6FF'
              r'\U0001F910-\U0001F96B'
              r'\U0001F980-\U0001F9E0'
              r'\u2600-\u26FF'
              r'\u2700-\u27BF]', flags=re.UNICODE
          )
          found = False
          for root, _, files in os.walk('.'):
              if any(p in root for p in ['.git', 'venv', '.github']): continue
              for f in files:
                  try:
                      text = open(os.path.join(root,f), encoding='utf-8').read()
                  except: continue
                  if emoji_re.search(text):
                      print(f"Emoji en: {os.path.join(root,f)}")
                      found = True
          if found: sys.exit(1)
          print("No se encontraron emojis.")
          EOF
