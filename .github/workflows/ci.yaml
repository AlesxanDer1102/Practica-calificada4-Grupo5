name: CI

on:
  pull_request:
    branches: [master, develop]
  push:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black isort

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Check code formatting with black
        run: |
          black --check --diff .

      - name: Check import sorting with isort
        continue-on-error: true
        run: |
          isort --check-only --diff .

      - name: Run tests with pytest
        run: |
          pytest --cov=backup_orchestrator --cov=backup_cli --cov-report=xml --cov-report=html --cov-report=term-missing

      - name: Upload coverage to Codecov
        continue-on-error: true
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

      - name: Upload coverage reports as artifacts
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

  backup:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies and python-dotenv
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install python-dotenv

      - name: execute backup
        env:
          POSTGRES_HOST: ${{secrets.POSTGRES_HOST}}
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}

          SLACK_TOKEN: ${{secrets.SLACK_BOT_TOKEN}}
          SLACK_CHANEL: ${{secrets.SLACK_DEFAULT_CHANNEL}}

        run: |
          python3 backup_orchestrator.py \
          --apply-retention
          --retention-full 3 \
          --slack-token $SLACK_TOKEN \
          --slack-channel $SLACK_CHANEL

      - name: Subir artefactps de backup
        uses: actions/upload-artifact@v4
        with:
          name: backups-${{github.run_id}}
          path: backups/*
